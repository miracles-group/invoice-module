@{

	// Layout
	Layout = "_Layout";

	// View
	View = this;
	SetupLoginStatus(); // Setup login status
	SetClientVar("login", LoginStatus);

	// Global Page Rendering event
	Page_Rendering();

	// Page Render event
	s_dodetltest_View.Page_Render();

	// Check action result
	if (s_dodetltest_View.ActionResult is EmptyResult) { // Terminate page
		return;
	}

	#pragma warning disable 168

	// Local variables (Temp data)
	string sqlWrk, filterWrk, whereWrk, curVal;
	List<Dictionary<string, object>> rswrk;
	string[] arWrk;
	List<object> listWrk;
	Func<string> lookupFilter;

	#pragma warning restore 168

}
@if (!s_dodetltest.IsExport()) {
<script>

// Form object
var CurrentPageID = ew.PAGE_ID = "view";
var fs_dodetltestview = currentForm = new ew.Form("fs_dodetltestview", "view");

// Form_CustomValidate event
fs_dodetltestview.Form_CustomValidate = function(fobj) { // DO NOT CHANGE THIS LINE!

	// Your custom validation code here, return false if invalid.
	return true;
}

// Use JavaScript validation or not remove PROJ.ProgramLanguage
fs_dodetltestview.validateRequired = @ConvertToJson(Config.ClientValidate);

// Dynamic selection lists
fs_dodetltestview.lists["x_part_code"] = @Html.Raw(s_dodetltest_View.part_code.Lookup.ToClientList());
fs_dodetltestview.lists["x_part_code"].options = @Html.Raw(ConvertToJson(s_dodetltest_View.part_code.LookupOptions));
fs_dodetltestview.autoSuggests["x_part_code"] = @Html.Raw(ConvertToJson(new Dictionary<string, string> { {"data", "ajax=autosuggest"} }));

// Form object for search
</script>
<script>

// Write your client script here, no need to add script tags.
</script>
}
@if (!s_dodetltest.IsExport()) {
<div class="btn-toolbar ew-toolbar">
	@s_dodetltest_View.ExportOptions.RenderBody()
	@s_dodetltest_View.OtherOptions.RenderBody()
	<div class="clearfix"></div>
</div>
}
@s_dodetltest_View.ShowPageHeader()
@s_dodetltest_View.ShowMessages()
<form name="fs_dodetltestview" id="fs_dodetltestview" class="form-inline ew-form ew-view-form" method="post">
@if (s_dodetltest_View.CheckToken) {
	@Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(s_dodetltest_View.IsModal)">
<table class="table table-striped table-sm ew-view-table">
@if (s_dodetltest.item_no.Visible) { @* s_dodetltest.item_no.Visible (begin) *@
	<tr id="r_item_no">
		<td class="@s_dodetltest_View.TableLeftColumnClass"><span id="elh_s_dodetltest_item_no">@Html.Raw(s_dodetltest.item_no.Caption)</span></td>
		<td data-name="item_no" @Html.Raw(s_dodetltest.item_no.CellAttributes)>
<span id="el_s_dodetltest_item_no">
<span @Html.Raw(s_dodetltest.item_no.ViewAttributes)>
@Html.Raw(s_dodetltest.item_no.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_dodetltest.item_no.Visible (end) *@
@if (s_dodetltest.item_type.Visible) { @* s_dodetltest.item_type.Visible (begin) *@
	<tr id="r_item_type">
		<td class="@s_dodetltest_View.TableLeftColumnClass"><span id="elh_s_dodetltest_item_type">@Html.Raw(s_dodetltest.item_type.Caption)</span></td>
		<td data-name="item_type" @Html.Raw(s_dodetltest.item_type.CellAttributes)>
<span id="el_s_dodetltest_item_type">
<span @Html.Raw(s_dodetltest.item_type.ViewAttributes)>
@Html.Raw(s_dodetltest.item_type.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_dodetltest.item_type.Visible (end) *@
@if (s_dodetltest.part_code.Visible) { @* s_dodetltest.part_code.Visible (begin) *@
	<tr id="r_part_code">
		<td class="@s_dodetltest_View.TableLeftColumnClass"><span id="elh_s_dodetltest_part_code">@Html.Raw(s_dodetltest.part_code.Caption)</span></td>
		<td data-name="part_code" @Html.Raw(s_dodetltest.part_code.CellAttributes)>
<span id="el_s_dodetltest_part_code">
<span @Html.Raw(s_dodetltest.part_code.ViewAttributes)>
@Html.Raw(s_dodetltest.part_code.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_dodetltest.part_code.Visible (end) *@
@if (s_dodetltest.part_desc.Visible) { @* s_dodetltest.part_desc.Visible (begin) *@
	<tr id="r_part_desc">
		<td class="@s_dodetltest_View.TableLeftColumnClass"><span id="elh_s_dodetltest_part_desc">@Html.Raw(s_dodetltest.part_desc.Caption)</span></td>
		<td data-name="part_desc" @Html.Raw(s_dodetltest.part_desc.CellAttributes)>
<span id="el_s_dodetltest_part_desc">
<span @Html.Raw(s_dodetltest.part_desc.ViewAttributes)>
@Html.Raw(s_dodetltest.part_desc.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_dodetltest.part_desc.Visible (end) *@
@if (s_dodetltest.uom.Visible) { @* s_dodetltest.uom.Visible (begin) *@
	<tr id="r_uom">
		<td class="@s_dodetltest_View.TableLeftColumnClass"><span id="elh_s_dodetltest_uom">@Html.Raw(s_dodetltest.uom.Caption)</span></td>
		<td data-name="uom" @Html.Raw(s_dodetltest.uom.CellAttributes)>
<span id="el_s_dodetltest_uom">
<span @Html.Raw(s_dodetltest.uom.ViewAttributes)>
@Html.Raw(s_dodetltest.uom.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_dodetltest.uom.Visible (end) *@
@if (s_dodetltest.qty.Visible) { @* s_dodetltest.qty.Visible (begin) *@
	<tr id="r_qty">
		<td class="@s_dodetltest_View.TableLeftColumnClass"><span id="elh_s_dodetltest_qty">@Html.Raw(s_dodetltest.qty.Caption)</span></td>
		<td data-name="qty" @Html.Raw(s_dodetltest.qty.CellAttributes)>
<span id="el_s_dodetltest_qty">
<span @Html.Raw(s_dodetltest.qty.ViewAttributes)>
@Html.Raw(s_dodetltest.qty.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_dodetltest.qty.Visible (end) *@
@if (s_dodetltest.unit_price.Visible) { @* s_dodetltest.unit_price.Visible (begin) *@
	<tr id="r_unit_price">
		<td class="@s_dodetltest_View.TableLeftColumnClass"><span id="elh_s_dodetltest_unit_price">@Html.Raw(s_dodetltest.unit_price.Caption)</span></td>
		<td data-name="unit_price" @Html.Raw(s_dodetltest.unit_price.CellAttributes)>
<span id="el_s_dodetltest_unit_price">
<span @Html.Raw(s_dodetltest.unit_price.ViewAttributes)>
@Html.Raw(s_dodetltest.unit_price.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_dodetltest.unit_price.Visible (end) *@
@if (s_dodetltest.amount_origin.Visible) { @* s_dodetltest.amount_origin.Visible (begin) *@
	<tr id="r_amount_origin">
		<td class="@s_dodetltest_View.TableLeftColumnClass"><span id="elh_s_dodetltest_amount_origin">@Html.Raw(s_dodetltest.amount_origin.Caption)</span></td>
		<td data-name="amount_origin" @Html.Raw(s_dodetltest.amount_origin.CellAttributes)>
<span id="el_s_dodetltest_amount_origin">
<span @Html.Raw(s_dodetltest.amount_origin.ViewAttributes)>
@Html.Raw(s_dodetltest.amount_origin.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_dodetltest.amount_origin.Visible (end) *@
@if (s_dodetltest.tax_code.Visible) { @* s_dodetltest.tax_code.Visible (begin) *@
	<tr id="r_tax_code">
		<td class="@s_dodetltest_View.TableLeftColumnClass"><span id="elh_s_dodetltest_tax_code">@Html.Raw(s_dodetltest.tax_code.Caption)</span></td>
		<td data-name="tax_code" @Html.Raw(s_dodetltest.tax_code.CellAttributes)>
<span id="el_s_dodetltest_tax_code">
<span @Html.Raw(s_dodetltest.tax_code.ViewAttributes)>
@Html.Raw(s_dodetltest.tax_code.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_dodetltest.tax_code.Visible (end) *@
@if (s_dodetltest.tax_rate.Visible) { @* s_dodetltest.tax_rate.Visible (begin) *@
	<tr id="r_tax_rate">
		<td class="@s_dodetltest_View.TableLeftColumnClass"><span id="elh_s_dodetltest_tax_rate">@Html.Raw(s_dodetltest.tax_rate.Caption)</span></td>
		<td data-name="tax_rate" @Html.Raw(s_dodetltest.tax_rate.CellAttributes)>
<span id="el_s_dodetltest_tax_rate">
<span @Html.Raw(s_dodetltest.tax_rate.ViewAttributes)>
@Html.Raw(s_dodetltest.tax_rate.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_dodetltest.tax_rate.Visible (end) *@
@if (s_dodetltest.tax_amount_origin.Visible) { @* s_dodetltest.tax_amount_origin.Visible (begin) *@
	<tr id="r_tax_amount_origin">
		<td class="@s_dodetltest_View.TableLeftColumnClass"><span id="elh_s_dodetltest_tax_amount_origin">@Html.Raw(s_dodetltest.tax_amount_origin.Caption)</span></td>
		<td data-name="tax_amount_origin" @Html.Raw(s_dodetltest.tax_amount_origin.CellAttributes)>
<span id="el_s_dodetltest_tax_amount_origin">
<span @Html.Raw(s_dodetltest.tax_amount_origin.ViewAttributes)>
@Html.Raw(s_dodetltest.tax_amount_origin.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_dodetltest.tax_amount_origin.Visible (end) *@
@if (s_dodetltest.to_gl_acct.Visible) { @* s_dodetltest.to_gl_acct.Visible (begin) *@
	<tr id="r_to_gl_acct">
		<td class="@s_dodetltest_View.TableLeftColumnClass"><span id="elh_s_dodetltest_to_gl_acct">@Html.Raw(s_dodetltest.to_gl_acct.Caption)</span></td>
		<td data-name="to_gl_acct" @Html.Raw(s_dodetltest.to_gl_acct.CellAttributes)>
<span id="el_s_dodetltest_to_gl_acct">
<span @Html.Raw(s_dodetltest.to_gl_acct.ViewAttributes)>
@Html.Raw(s_dodetltest.to_gl_acct.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_dodetltest.to_gl_acct.Visible (end) *@
@if (s_dodetltest.tax_acct.Visible) { @* s_dodetltest.tax_acct.Visible (begin) *@
	<tr id="r_tax_acct">
		<td class="@s_dodetltest_View.TableLeftColumnClass"><span id="elh_s_dodetltest_tax_acct">@Html.Raw(s_dodetltest.tax_acct.Caption)</span></td>
		<td data-name="tax_acct" @Html.Raw(s_dodetltest.tax_acct.CellAttributes)>
<span id="el_s_dodetltest_tax_acct">
<span @Html.Raw(s_dodetltest.tax_acct.ViewAttributes)>
@Html.Raw(s_dodetltest.tax_acct.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_dodetltest.tax_acct.Visible (end) *@
</table>
@{ s_dodetltest_View.CloseRecordset(); }
</form>
@s_dodetltest_View.ShowPageFooter()
@ShowDebugMessage()
@ElapsedTime()
@if (!s_dodetltest.IsExport()) {
<script>

// Write your table-specific startup script here
// document.write("page loaded");

</script>
}
