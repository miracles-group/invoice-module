@{

	// Layout
	Layout = "_Layout";

	// View
	View = this;
	SetupLoginStatus(); // Setup login status
	SetClientVar("login", LoginStatus);

	// Global Page Rendering event
	Page_Rendering();

	// Page Render event
	s_taxmaster_View.Page_Render();

	// Check action result
	if (s_taxmaster_View.ActionResult is EmptyResult) { // Terminate page
		return;
	}

	#pragma warning disable 168

	// Local variables (Temp data)
	string sqlWrk, filterWrk, whereWrk, curVal;
	List<Dictionary<string, object>> rswrk;
	string[] arWrk;
	List<object> listWrk;
	Func<string> lookupFilter;

	#pragma warning restore 168

}
@if (!s_taxmaster.IsExport()) {
<script>

// Form object
var CurrentPageID = ew.PAGE_ID = "view";
var fs_taxmasterview = currentForm = new ew.Form("fs_taxmasterview", "view");

// Form_CustomValidate event
fs_taxmasterview.Form_CustomValidate = function(fobj) { // DO NOT CHANGE THIS LINE!

	// Your custom validation code here, return false if invalid.
	return true;
}

// Use JavaScript validation or not remove PROJ.ProgramLanguage
fs_taxmasterview.validateRequired = @ConvertToJson(Config.ClientValidate);

// Dynamic selection lists
// Form object for search

</script>
<script>

// Write your client script here, no need to add script tags.
</script>
}
@if (!s_taxmaster.IsExport()) {
<div class="btn-toolbar ew-toolbar">
	@s_taxmaster_View.ExportOptions.RenderBody()
	@s_taxmaster_View.OtherOptions.RenderBody()
	<div class="clearfix"></div>
</div>
}
@s_taxmaster_View.ShowPageHeader()
@s_taxmaster_View.ShowMessages()
<form name="fs_taxmasterview" id="fs_taxmasterview" class="form-inline ew-form ew-view-form" method="post">
@if (s_taxmaster_View.CheckToken) {
	@Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(s_taxmaster_View.IsModal)">
<table class="table table-striped table-sm ew-view-table">
@if (s_taxmaster.Id.Visible) { @* s_taxmaster.Id.Visible (begin) *@
	<tr id="r_Id">
		<td class="@s_taxmaster_View.TableLeftColumnClass"><span id="elh_s_taxmaster_Id">@Html.Raw(s_taxmaster.Id.Caption)</span></td>
		<td data-name="Id" @Html.Raw(s_taxmaster.Id.CellAttributes)>
<span id="el_s_taxmaster_Id">
<span @Html.Raw(s_taxmaster.Id.ViewAttributes)>
@Html.Raw(s_taxmaster.Id.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_taxmaster.Id.Visible (end) *@
@if (s_taxmaster.tax_code.Visible) { @* s_taxmaster.tax_code.Visible (begin) *@
	<tr id="r_tax_code">
		<td class="@s_taxmaster_View.TableLeftColumnClass"><span id="elh_s_taxmaster_tax_code">@Html.Raw(s_taxmaster.tax_code.Caption)</span></td>
		<td data-name="tax_code" @Html.Raw(s_taxmaster.tax_code.CellAttributes)>
<span id="el_s_taxmaster_tax_code">
<span @Html.Raw(s_taxmaster.tax_code.ViewAttributes)>
@Html.Raw(s_taxmaster.tax_code.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_taxmaster.tax_code.Visible (end) *@
@if (s_taxmaster.description.Visible) { @* s_taxmaster.description.Visible (begin) *@
	<tr id="r_description">
		<td class="@s_taxmaster_View.TableLeftColumnClass"><span id="elh_s_taxmaster_description">@Html.Raw(s_taxmaster.description.Caption)</span></td>
		<td data-name="description" @Html.Raw(s_taxmaster.description.CellAttributes)>
<span id="el_s_taxmaster_description">
<span @Html.Raw(s_taxmaster.description.ViewAttributes)>
@Html.Raw(s_taxmaster.description.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_taxmaster.description.Visible (end) *@
@if (s_taxmaster.tax_type.Visible) { @* s_taxmaster.tax_type.Visible (begin) *@
	<tr id="r_tax_type">
		<td class="@s_taxmaster_View.TableLeftColumnClass"><span id="elh_s_taxmaster_tax_type">@Html.Raw(s_taxmaster.tax_type.Caption)</span></td>
		<td data-name="tax_type" @Html.Raw(s_taxmaster.tax_type.CellAttributes)>
<span id="el_s_taxmaster_tax_type">
<span @Html.Raw(s_taxmaster.tax_type.ViewAttributes)>
@Html.Raw(s_taxmaster.tax_type.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_taxmaster.tax_type.Visible (end) *@
@if (s_taxmaster.in_out.Visible) { @* s_taxmaster.in_out.Visible (begin) *@
	<tr id="r_in_out">
		<td class="@s_taxmaster_View.TableLeftColumnClass"><span id="elh_s_taxmaster_in_out">@Html.Raw(s_taxmaster.in_out.Caption)</span></td>
		<td data-name="in_out" @Html.Raw(s_taxmaster.in_out.CellAttributes)>
<span id="el_s_taxmaster_in_out">
<span @Html.Raw(s_taxmaster.in_out.ViewAttributes)>
@Html.Raw(s_taxmaster.in_out.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_taxmaster.in_out.Visible (end) *@
@if (s_taxmaster.gl_acct.Visible) { @* s_taxmaster.gl_acct.Visible (begin) *@
	<tr id="r_gl_acct">
		<td class="@s_taxmaster_View.TableLeftColumnClass"><span id="elh_s_taxmaster_gl_acct">@Html.Raw(s_taxmaster.gl_acct.Caption)</span></td>
		<td data-name="gl_acct" @Html.Raw(s_taxmaster.gl_acct.CellAttributes)>
<span id="el_s_taxmaster_gl_acct">
<span @Html.Raw(s_taxmaster.gl_acct.ViewAttributes)>
@Html.Raw(s_taxmaster.gl_acct.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_taxmaster.gl_acct.Visible (end) *@
@if (s_taxmaster.tax_rate.Visible) { @* s_taxmaster.tax_rate.Visible (begin) *@
	<tr id="r_tax_rate">
		<td class="@s_taxmaster_View.TableLeftColumnClass"><span id="elh_s_taxmaster_tax_rate">@Html.Raw(s_taxmaster.tax_rate.Caption)</span></td>
		<td data-name="tax_rate" @Html.Raw(s_taxmaster.tax_rate.CellAttributes)>
<span id="el_s_taxmaster_tax_rate">
<span @Html.Raw(s_taxmaster.tax_rate.ViewAttributes)>
@Html.Raw(s_taxmaster.tax_rate.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_taxmaster.tax_rate.Visible (end) *@
@if (s_taxmaster.short_desc.Visible) { @* s_taxmaster.short_desc.Visible (begin) *@
	<tr id="r_short_desc">
		<td class="@s_taxmaster_View.TableLeftColumnClass"><span id="elh_s_taxmaster_short_desc">@Html.Raw(s_taxmaster.short_desc.Caption)</span></td>
		<td data-name="short_desc" @Html.Raw(s_taxmaster.short_desc.CellAttributes)>
<span id="el_s_taxmaster_short_desc">
<span @Html.Raw(s_taxmaster.short_desc.ViewAttributes)>
@Html.Raw(s_taxmaster.short_desc.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_taxmaster.short_desc.Visible (end) *@
@if (s_taxmaster.sls_acct.Visible) { @* s_taxmaster.sls_acct.Visible (begin) *@
	<tr id="r_sls_acct">
		<td class="@s_taxmaster_View.TableLeftColumnClass"><span id="elh_s_taxmaster_sls_acct">@Html.Raw(s_taxmaster.sls_acct.Caption)</span></td>
		<td data-name="sls_acct" @Html.Raw(s_taxmaster.sls_acct.CellAttributes)>
<span id="el_s_taxmaster_sls_acct">
<span @Html.Raw(s_taxmaster.sls_acct.ViewAttributes)>
@Html.Raw(s_taxmaster.sls_acct.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_taxmaster.sls_acct.Visible (end) *@
@if (s_taxmaster.sls_dept.Visible) { @* s_taxmaster.sls_dept.Visible (begin) *@
	<tr id="r_sls_dept">
		<td class="@s_taxmaster_View.TableLeftColumnClass"><span id="elh_s_taxmaster_sls_dept">@Html.Raw(s_taxmaster.sls_dept.Caption)</span></td>
		<td data-name="sls_dept" @Html.Raw(s_taxmaster.sls_dept.CellAttributes)>
<span id="el_s_taxmaster_sls_dept">
<span @Html.Raw(s_taxmaster.sls_dept.ViewAttributes)>
@Html.Raw(s_taxmaster.sls_dept.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_taxmaster.sls_dept.Visible (end) *@
@if (s_taxmaster.dt_obsolete.Visible) { @* s_taxmaster.dt_obsolete.Visible (begin) *@
	<tr id="r_dt_obsolete">
		<td class="@s_taxmaster_View.TableLeftColumnClass"><span id="elh_s_taxmaster_dt_obsolete">@Html.Raw(s_taxmaster.dt_obsolete.Caption)</span></td>
		<td data-name="dt_obsolete" @Html.Raw(s_taxmaster.dt_obsolete.CellAttributes)>
<span id="el_s_taxmaster_dt_obsolete">
<span @Html.Raw(s_taxmaster.dt_obsolete.ViewAttributes)>
@Html.Raw(s_taxmaster.dt_obsolete.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_taxmaster.dt_obsolete.Visible (end) *@
@if (s_taxmaster.id_obsolete.Visible) { @* s_taxmaster.id_obsolete.Visible (begin) *@
	<tr id="r_id_obsolete">
		<td class="@s_taxmaster_View.TableLeftColumnClass"><span id="elh_s_taxmaster_id_obsolete">@Html.Raw(s_taxmaster.id_obsolete.Caption)</span></td>
		<td data-name="id_obsolete" @Html.Raw(s_taxmaster.id_obsolete.CellAttributes)>
<span id="el_s_taxmaster_id_obsolete">
<span @Html.Raw(s_taxmaster.id_obsolete.ViewAttributes)>
@Html.Raw(s_taxmaster.id_obsolete.GetViewValue())</span>
</span>
</td>
	</tr>
} @* s_taxmaster.id_obsolete.Visible (end) *@
</table>
@{ s_taxmaster_View.CloseRecordset(); }
</form>
@s_taxmaster_View.ShowPageFooter()
@ShowDebugMessage()
@ElapsedTime()
@if (!s_taxmaster.IsExport()) {
<script>

// Write your table-specific startup script here
// document.write("page loaded");

</script>
}
